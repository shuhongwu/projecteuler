//
//  AppDelegate.m
//  Excises
//
//  Created by Alex on 3/22/13.
//  Copyright (c) 2013 Alex. All rights reserved.
//

#import "AppDelegate.h"

@implementation AppDelegate

- (void)dealloc
{
    [super dealloc];
}

- (void)applicationDidFinishLaunching:(NSNotification *)aNotification
{
    /*
     <<<<<<<
     If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
     Find the sum of all the multiples of 3 or 5 below 1000.
     >>>>>>>
     */
    /*
     int sum=0;
     for(int i=1;i<1000;i++){
     
     if(i%3==0 || i%5==0){
     sum=sum+i;
     }
     
     }
     NSLog(@"%d",sum);
     */
    
    
    
    /*
     Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
     
     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
     
     By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
     */

    /*
    unsigned long long int first=1;
    unsigned long long int second=2;
    unsigned long long int result=0;
    unsigned long long int sum=0;
        
    while(result<4000000){
        
        result = first + second;
        first = second;
        second=result;
        
        if (result%2==0) {
            sum=result+sum;
        }
    }
    NSLog(@"result:%llu",sum+2);
    */
    
    
    /*
     The prime factors of 13195 are 5, 7, 13 and 29.
     
     What is the largest prime factor of the number 600851475143 ?
     
     long  x =600851475143;
     int i=2;
     while(x!=1){
        if(x%i==0){
            x = x/i;
        }
        else{
            i+=1;
        }
    }
    
    NSLog(@"result.....%d",i);
    */
    
    /*
     A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 99.
     
     Find the largest palindrome made from the product of two 3-digit numbers.
     
    
    int finalValue=0;
    for(int i=999;i>99;i--){
     
        for (int j=999; j>99; j--) {
            
            int result = i*j;
            NSString *jtemp = [NSString stringWithFormat:@"%d",result];
            NSString *final = @"";
            for(long i = jtemp.length-1; i>=0; i--)
                final = [final stringByAppendingString: [jtemp substringWithRange:NSMakeRange(i, 1)]];
            
            if ([jtemp isEqualToString:final]&& jtemp.length==6) {
                if (finalValue < result) {
                    finalValue=result;
                }
            }

        }
        
    }
    
    NSLog(@"result...%d",finalValue);
    */
    
    /*
     2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.
     
     What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?
     */
    
    unsigned int i = 2500;
	unsigned int j = 0;
	do{
		i+=20;
		for(j = 3; j < 20; j++){
			if(i%j != 0)
				break;
		}
	}while(j<20);
	printf("result: %d", i);
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
}

@end
